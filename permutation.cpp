#include <bits/stdc++.h>
using namespace std;

/* 1. 순열이란? 

순서와 상관있게 뽑는다면? -> 순열

순서와 상관없이 뽑는다면? -> 조합

예시 : {1,2,3} 중 두 가지 숫자를 뽑으라고 한다면, 

조합의 경우 {1,2} {2,3} {1,3} 의 3가지의 경우의 수만을 가진다.

그러나, 순열의 경우엔 다음과 같다.

앞에 1이 오는경우 : {1,2}, {1,3}
앞에 2가 오는경우 : {2,1}, {2,3}
앞에 3이 오는경우 : {3,1}, {3,2}

이렇게 총 6개의 경우의 수를 가지게 된다는 것

만약 문제에서 ~~ 순서를 재배치하여~ ~ 한 순서의 경우라는 사족이 붙을 경우 순열이라고 생각하면 된다. (100% 는 아님)


2. next_permutation?

그렇다면 코드로 순열을 구현하는 방법은 무엇일까, 편리하게도 c++은 next_permutation 함수를 지원한다.

next_permutation()의 매개변수는 (첫번째 매개변수 : 시작 지점, 두번째 매개변수 : 끝 지점) 간단하게 from ~ to 로 설명할 수 있겠다.

만약 {1, 2, 3} 을 원소로 가지는 배열이 있다면, 해당 배열의 인덱스는 0, 1, 2가 될 것이다. 이것이 만약 array 형태라면

next_permutation(0, 3); 이라고 하면된다. 두번째 매개변수는 미만의 의미를 나타내기 때문

3. 구현
*/

int main() {
    int a[] = {1,2,3};

    do{
        for(int i : a) cout << i << " ";
        cout << '\n';
    }while(next_permutation(&a[0], &a[0] + 3));
}





